<?php

/**
 * @file
 * comstack_pm_rest_api.module
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function comstack_pm_rest_api_ctools_plugin_directory($module, $plugin) {
  if ($module === 'restful' || $module === 'entity_validator') {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_menu().
 */
function comstack_pm_rest_api_menu() {
  $items = array();
  $api_base_path = variable_get('restful_hook_menu_base_path', 'api');

  // We're only after our one endpoint, so just work with that one.
  $plugins = restful_get_restful_plugins();
  $plugin = $plugins['messages__conversations__1_0'];

  // This code is copied directly from the RESTful module. Take a look at
  // restful_menu().
  $item = array(
    'title' => $plugin['name'],
    'access callback' => 'restful_menu_access_callback',
    // Hardcode the URL for the endpoint. Drupals menu system will accept % as
    // a wildcard whereas RESTful works differently.
    'access arguments' => array('cs-pm/conversations/%/messages'),
    'page callback' => 'restful_menu_process_callback',
    // Hardcode it again. The restful resource will do the work of grabbing the
    // conversation ID from the URL.
    'page arguments' => array('cs-pm/conversations/%/messages'),
    'delivery callback' => 'restful_formatted_delivery',
    'type' => MENU_CALLBACK,
  );
  $item['access arguments'][] = 1;
  $item['page arguments'][] = 1;
  $items[$api_base_path . '/v' . $plugin['major_version'] . '.' . $plugin['minor_version'] . '/' . $plugin['resource']] = $item;
  $items[$api_base_path . '/v' . $plugin['major_version'] . '/' . $plugin['resource']] = $item;
  $item['access arguments'] = $item['page arguments'] = array(1);
  $items[$api_base_path . '/' . $plugin['resource']] = $item;

  return $items;
}

/**
 * Implements hook_entity_property_info_alter().
 */
function comstack_pm_rest_api_entity_property_info_alter(&$info) {
  // If the picture property doesn't exist on the user entity then add it.
  // This issue has a patch to correct the problem.
  // https://www.drupal.org/node/2224645#comment-10161298
  // This module will only take care of "view".
  if (!isset($info['user']['properties']['picture'])) {
    $info['user']['properties']['picture'] = array(
      'label' => t('Picture'),
      'description' => t("The user's picture."),
      'type' => 'file',
      'access callback' => 'comstack_pm_rest_api_user_access_picture_property',
      'getter callback' => 'comstack_pm_rest_api_user_get_picture_property',
      'schema field' => 'picture',
    );
  }
}

/**
 * Access callback for the picture property.
 */
function comstack_pm_rest_api_user_access_picture_property($op, $property, $entity = NULL, $account = NULL) {
  if ($op === 'view') {
    return TRUE;
  }
}

/**
 * Picture property get callback.
 */
function comstack_pm_rest_api_user_get_picture_property($account, array $options, $name, $entity_type) {
  // Check for an image object and load a default if one exists.
  if (empty($account->picture)) {
    $account->picture = comstack_pm_rest_api_user_get_default_picture();
  }

  return empty($account->picture) ? NULL : $account->picture;
}

/**
 * Return a file object for a default avatar or NULL of one doesn't exist.
 */
function comstack_pm_rest_api_user_get_default_picture() {
  static $_comstack_pm_rest_api_user_default_picture;

  if (!isset($_comstack_pm_rest_api_user_default_picture)) {
    $default_avatar_path = variable_get('user_picture_default', '');

    if ($default_avatar_path && file_valid_uri($default_avatar_path)) {
      $file = new stdClass();
      $file->uri = $default_avatar_path;

      $_comstack_pm_rest_api_user_default_picture = $file;
    }
    else {
      $_comstack_pm_rest_api_user_default_picture = NULL;
    }
  }

  return $_comstack_pm_rest_api_user_default_picture;
}
